<project name="Amplitude Android SDK" basedir="." default="dist" xmlns:artifact="urn:maven-artifact-ant">

    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant"
             classpath="lib/maven-ant-tasks-2.1.3.jar" />

    <description />
    <!-- set global properties for this build -->

    <property name="src" location="src" />
    <property name="build" location="build" />
    <property name="dist" location="dist" />

    <property name="test.src" location="test" />
    <property name="test.reports" location="${dist}/reports"/>

    <property environment="env" />
    <property name="android-sdk-path" value="${env.ANDROID_SDK}" />
    <property name="android-target" value="${env.ANDROID_TARGET}" />

    <property name="groupId" value="com.amplitude" />
    <property name="artifactId" value="amplitude-android" />
    <property name="version" value="1.4.3" />

    <property name="jar" value="${dist}/lib/${artifactId}-${version}.jar" />
    <property name="javadoc-jar" value="${dist}/lib/${artifactId}-${version}-javadoc.jar" />
    <property name="sources-jar" value="${dist}/lib/${artifactId}-${version}-sources.jar" />

    <path id="project.class.path">
        <pathelement path="${android-sdk-path}/platforms/android-${android-target}/android.jar" />
    </path>

    <target name="init">
        <mkdir dir="${build}" />
        <mkdir dir="${dist}/lib" />
        <mkdir dir="${test.reports}" />
    </target>

    <target name="clean" >
        <delete dir="${build}" />
        <delete dir="${dist}" />
    </target>

    <target name="build" depends="init" >
        <echo message="Building for android target ${android-target}" />
        <echo message="Java version: ${java.version}"/>
        <echo message="Android SDK Path: ${toString:project.class.path}" />
        <javac classpathref="project.class.path"
               srcdir="${src}"
               destdir="${build}"
               includeantruntime="false" />
    </target>

    <target name="jar" depends="build">
        <jar destfile="${jar}" basedir="${build}" includes="com/amplitude/api/*.class" />
    </target>

    <target name="unity" depends="build" description="creates jar for unity plugin">
        <jar destfile="amplitude-unity-${version}.jar">
            <fileset dir="${build}" includes="com/amplitude/api/*.class" />
            <fileset dir="${src}" includes="com/amplitude/api/*.java" />
            <fileset dir="${build}" includes="com/amplitude/unity/plugins/*.class" />
            <fileset dir="${src}" includes="com/amplitude/unity/plugins/*.java" />
        </jar>
    </target>

    <target name="dist" depends="jar" description="creates release jar with javadoc and sources">
        <javadoc classpathref="project.class.path" sourcepath="${src}" destdir="${dist}/javadoc">
            <fileset dir="${src}" includes="com/amplitude/api/*.java" />
        </javadoc>
        <jar jarfile="${javadoc-jar}">
            <fileset dir="${dist}/javadoc" />
        </jar>
        <jar jarfile="${sources-jar}">
            <fileset dir="${src}" includes="com/amplitude/api/*.java" />
        </jar>
    </target>

    <property name="ossrh-snapshots-repository-url" value="https://oss.sonatype.org/content/repositories/snapshots" />
    <property name="ossrh-staging-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2" />
    <property name="ossrh-server-id" value="ossrh" />

    <!-- version in build.xml and pom.xml must be -SNAPSHOT -->
    <target name="deploy" depends="dist" description="deploy snapshot version to Maven snapshot repository">
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
            <arg value="-Durl=${ossrh-snapshots-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${jar}" />
        </artifact:mvn>
    </target>

    <target name="build-tests" depends="build" description="Compile test files">
        <path id="test.classpath">
            <fileset dir="lib" includes="**/*.jar" />
            <path refid="project.class.path" />
        </path>
        <javac srcdir="${test.src}"
               destdir="${build}"
               classpathref="test.classpath"
               includeantruntime="false">
        </javac>
    </target>

    <target name="test" depends="build-tests" description="Runs all Robolectric unit tests.">
        <path id="junit.classpath">
            <pathelement location="${build}" />
            <fileset dir="lib" includes="**/*.jar" />
            <path refid="project.class.path" />
        </path>

        <junit failureproperty="junit.failure" printsummary="yes">
            <classpath refid="junit.classpath" />
            <formatter type="brief" />
            <batchtest todir="${test.reports}">
                <fileset dir="${test.src}" includes="**/*Test.java" />
            </batchtest>
        </junit>
        <fail if="junit.failure" message="Unit test(s) failed. See reports!" />
    </target>


    <!-- version in build.xml and pom.xml must NOT be -SNAPSHOT -->
    <target name="stage" depends="dist" description="deploy release version to Maven staging repository">
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${jar}" />
            <arg value="-Pgpg" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${sources-jar}" />
            <arg value="-Dclassifier=sources" />
            <arg value="-Pgpg" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${javadoc-jar}" />
            <arg value="-Dclassifier=javadoc" />
            <arg value="-Pgpg" />
        </artifact:mvn>
    </target>

</project>
